"use strict";(self.webpackChunkneuraltrust_docs=self.webpackChunkneuraltrust_docs||[]).push([[8428],{1424:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>d,frontMatter:()=>r,metadata:()=>s,toc:()=>u});const s=JSON.parse('{"id":"trusttest/getting-started/step-by-step/create-evaluation-set","title":"Create an EvaluationSet","description":"This guide explains how to use the NeuralTrust SDK to create and evaluate a functional EvaluationSet from a RAG.","source":"@site/docs/trusttest/getting-started/step-by-step/create-evaluation-set.md","sourceDirName":"trusttest/getting-started/step-by-step","slug":"/trusttest/getting-started/step-by-step/create-evaluation-set","permalink":"/trusttest/getting-started/step-by-step/create-evaluation-set","draft":false,"unlisted":false,"editUrl":"https://github.com/NeuralTrust/neuraltrust/blob/main/docs/trusttest/getting-started/step-by-step/create-evaluation-set.md","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_position":3},"sidebar":"tutorialSidebar","previous":{"title":"Configure your LLM endpoint","permalink":"/trusttest/getting-started/step-by-step/configure-llm-endpoint"},"next":{"title":"Run a Custom Objective Attack","permalink":"/trusttest/getting-started/step-by-step/run-custom-attack"}}');var i=n(74848),a=n(28453);const r={sidebar_position:3},o="Create an EvaluationSet",l={},u=[{value:"Overview",id:"overview",level:2},{value:"Prerequisites",id:"prerequisites",level:2},{value:"Environment Setup",id:"environment-setup",level:2},{value:"Initialize NeuralTrust Client",id:"initialize-neuraltrust-client",level:2},{value:"Build the EvaluationSet",id:"build-the-evaluationset",level:2},{value:"Complete Script",id:"complete-script",level:2}];function c(e){const t={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,a.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.header,{children:(0,i.jsx)(t.h1,{id:"create-an-evaluationset",children:"Create an EvaluationSet"})}),"\n",(0,i.jsx)(t.p,{children:"This guide explains how to use the NeuralTrust SDK to create and evaluate a functional EvaluationSet from a RAG."}),"\n",(0,i.jsx)(t.h2,{id:"overview",children:"Overview"}),"\n",(0,i.jsx)(t.p,{children:"This script demonstrates how to:"}),"\n",(0,i.jsxs)(t.ol,{children:["\n",(0,i.jsx)(t.li,{children:"Set up a knowledge base"}),"\n",(0,i.jsx)(t.li,{children:"Create an EvaluationSet"}),"\n",(0,i.jsx)(t.li,{children:"Generate functional test cases"}),"\n",(0,i.jsx)(t.li,{children:"Run evaluations"}),"\n"]}),"\n",(0,i.jsx)(t.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"Upstash credentials (URL and token)"}),"\n"]}),"\n",(0,i.jsx)(t.h2,{id:"environment-setup",children:"Environment Setup"}),"\n",(0,i.jsx)(t.p,{children:"First, we need to set up our environment and import required packages:"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-python",children:"import os\nfrom dotenv import load_dotenv\nfrom neuraltrust import NeuralTrust\n\nload_dotenv()\n"})}),"\n",(0,i.jsxs)(t.p,{children:["The script uses ",(0,i.jsx)(t.code,{children:"python-dotenv"})," to load environment variables from a ",(0,i.jsx)(t.code,{children:".env"})," file. Make sure your ",(0,i.jsx)(t.code,{children:".env"})," file contains:"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-plaintext",children:"NEURALTRUST_API_KEY=your_api_key_here\nUPSTASH_URL=your_upstash_url\nUPSTASH_TOKEN=your_upstash_token\n"})}),"\n",(0,i.jsx)(t.h2,{id:"initialize-neuraltrust-client",children:"Initialize NeuralTrust Client"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-python",children:'client = NeuralTrust(api_key=os.getenv("NEURALTRUST_API_KEY"))\n'})}),"\n",(0,i.jsx)(t.h2,{id:"build-the-evaluationset",children:"Build the EvaluationSet"}),"\n",(0,i.jsx)(t.p,{children:"Define the topics for which you want to generate TestSets:"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-python",children:'topics = [\n    "Missed flights",\n    "Lost luggage",\n]\n'})}),"\n",(0,i.jsx)(t.p,{children:"Then we will create a knowledge base that retrieves the required context from your Upstash database. This context will be used to generate a targeted EvaluationSet based on your specified topics:"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-python",children:'knowledge_base = client.knowledge_base.create(\n    type="upstash",\n    credentials={\n        "UPSTASH_URL": os.getenv("UPSTASH_URL"),\n        "UPSTASH_TOKEN": os.getenv("UPSTASH_TOKEN"),\n    },\n    seed_topics=[topic],\n)\n'})}),"\n",(0,i.jsx)(t.p,{children:"Creates an EvaluationSet:"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-python",children:'eval_functional = client.evaluation_set.create(\n    name="Functional: " + topic,\n    description="You are a chatbot that answers questions about the Airline topics.",\n)\n'})}),"\n",(0,i.jsx)(t.p,{children:"Generates functional test cases:"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-python",children:'functional_testset = client.testset.create(\n    name=topic,\n    type="functional",\n    evaluation_set_id=eval_functional.id,\n    num_questions=10,\n    knowledge_base_id=knowledge_base.id,\n)\n'})}),"\n",(0,i.jsx)(t.p,{children:"Runs the evaluation:"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-python",children:"client.evaluation_set.run(id=eval_functional.id)\n"})}),"\n",(0,i.jsx)(t.admonition,{type:"info",children:(0,i.jsxs)(t.p,{children:["This will run the EvaluationSet against the LLM you configured in the NeuralTrust API.\nFor more information on how to configure your LLM, please refer to the ",(0,i.jsx)(t.a,{href:"/trusttest/getting-started/step-by-step/configure-llm-endpoint",children:"Configure your LLM endpoint"})," guide."]})}),"\n",(0,i.jsx)(t.h2,{id:"complete-script",children:"Complete Script"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-python",children:'import os\nfrom dotenv import load_dotenv\nfrom neuraltrust import NeuralTrust\n\nload_dotenv()\n\nclient = NeuralTrust(api_key=os.getenv("NEURALTRUST_API_KEY"))\n\ntopics = [\n    "Missed flights",\n    "Lost luggage",\n]\n\nknowledge_base = client.knowledge_base.create(\n    type="upstash",\n    credentials={\n    "UPSTASH_URL": os.getenv("UPSTASH_URL"),\n    "UPSTASH_TOKEN": os.getenv("UPSTASH_TOKEN"),\n},\n    seed_topics=topics,\n)\n\neval_functional = client.evaluation_set.create(\n    name="Functional: " + topic,\n    description="You are a chatbot that answers questions about the Airline topics.",\n)\n\nadversarial_testset = client.testset.create(\n    name=topic,\n    type="functional",\n    evaluation_set_id=eval_functional.id,\n    num_questions=10,\n    knowledge_base_id=knowledge_base.id,\n)\n\nclient.evaluation_set.run(id=eval_functional.id)\n'})})]})}function d(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>o});var s=n(96540);const i={},a=s.createContext(i);function r(e){const t=s.useContext(a);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),s.createElement(a.Provider,{value:t},e.children)}}}]);