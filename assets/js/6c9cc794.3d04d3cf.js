"use strict";(self.webpackChunkneuraltrust_docs=self.webpackChunkneuraltrust_docs||[]).push([[8499],{1876:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>d,contentTitle:()=>a,default:()=>h,frontMatter:()=>l,metadata:()=>r,toc:()=>o});const r=JSON.parse('{"id":"ai-gateway/getting-started/step-by-step/configure-upstream","title":"Configure an Upstream","description":"This guide will walk you through configuring your first upstream in AI Gateway. An upstream defines how requests are distributed across multiple AI providers and models.","source":"@site/docs/ai-gateway/getting-started/step-by-step/configure-upstream.md","sourceDirName":"ai-gateway/getting-started/step-by-step","slug":"/ai-gateway/getting-started/step-by-step/configure-upstream","permalink":"/neuraltrust/ai-gateway/getting-started/step-by-step/configure-upstream","draft":false,"unlisted":false,"editUrl":"https://github.com/NeuralTrust/neuraltrust/blob/main/docs/ai-gateway/getting-started/step-by-step/configure-upstream.md","tags":[],"version":"current","sidebarPosition":5,"frontMatter":{"sidebar_position":5,"title":"Configure an Upstream"},"sidebar":"tutorialSidebar","previous":{"title":"Create Your First Gateway","permalink":"/neuraltrust/ai-gateway/getting-started/step-by-step/first-gateway"},"next":{"title":"Configure a Service","permalink":"/neuraltrust/ai-gateway/getting-started/step-by-step/add-service"}}');var s=i(4848),t=i(8453);const l={sidebar_position:5,title:"Configure an Upstream"},a="Configure an Upstream",d={},o=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Step 1: Plan Your Upstream",id:"step-1-plan-your-upstream",level:2},{value:"Step 2: Create the Upstream",id:"step-2-create-the-upstream",level:2},{value:"Understanding the Configuration",id:"understanding-the-configuration",level:3},{value:"Step 3: Verify Configuration",id:"step-3-verify-configuration",level:2},{value:"Step 4: Test Load Balancing",id:"step-4-test-load-balancing",level:2},{value:"Next Steps",id:"next-steps",level:2},{value:"Additional Resources",id:"additional-resources",level:2},{value:"Troubleshooting",id:"troubleshooting",level:2}];function c(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"configure-an-upstream",children:"Configure an Upstream"})}),"\n",(0,s.jsx)(n.p,{children:"This guide will walk you through configuring your first upstream in AI Gateway. An upstream defines how requests are distributed across multiple AI providers and models."}),"\n",(0,s.jsx)(n.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,s.jsx)(n.p,{children:"Before you begin, make sure you have:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"AI Gateway installed and running"}),"\n",(0,s.jsx)(n.li,{children:"Access to the Admin API"}),"\n",(0,s.jsx)(n.li,{children:"API keys for your AI providers (e.g., OpenAI, Anthropic)"}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"step-1-plan-your-upstream",children:"Step 1: Plan Your Upstream"}),"\n",(0,s.jsx)(n.p,{children:"Decide on your upstream configuration:"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"Choose which AI providers you want to use"}),"\n",(0,s.jsx)(n.li,{children:"Identify the models for each provider"}),"\n",(0,s.jsx)(n.li,{children:"Determine load balancing weights"}),"\n",(0,s.jsx)(n.li,{children:"Plan your routing strategy"}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"step-2-create-the-upstream",children:"Step 2: Create the Upstream"}),"\n",(0,s.jsx)(n.p,{children:"Create an upstream with multiple AI providers:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'curl -X POST http://localhost:8080/api/v1/gateways/{gateway-id}/upstreams \\\n  -H "Content-Type: application/json" \\\n  -d \'{\n    "name": "ai-providers-upstream",\n    "algorithm": "round-robin",\n    "targets": [\n      {\n        "path": "/v1/chat/completions",\n        "provider": "openai",\n        "weight": 50,\n        "priority": 1,\n        "default_model": "gpt-4o-mini",\n        "models": ["gpt-3.5-turbo", "gpt-4", "gpt-4o-mini"],\n        "credentials": {\n          "header_name": "Authorization",\n          "header_value": "Bearer your-openai-key"\n        }\n      },\n      {\n        "path": "/v1/messages",\n        "provider": "anthropic",\n        "weight": 50,\n        "priority": 1,\n        "default_model": "claude-3-5-sonnet-20241022",\n        "models": ["claude-3-5-sonnet-20241022"],\n        "headers": {\n          "anthropic-version": "2023-06-01"\n        },\n        "credentials": {\n          "header_name": "x-api-key",\n          "header_value": "your-anthropic-key"\n        }\n      }\n    ],\n    "health_checks": {\n      "passive": true,\n      "threshold": 3,\n      "interval": 60\n    }\n  }\'\n'})}),"\n",(0,s.jsx)(n.h3,{id:"understanding-the-configuration",children:"Understanding the Configuration"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Provider Configuration"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"path"}),": The endpoint path for the provider"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"provider"}),": The AI provider name"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"weight"}),": Load balancing weight (1-100)"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"priority"}),": Failover priority (lower numbers = higher priority)"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"default_model"}),": Default model to use when none specified"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"models"}),": List of supported models for this provider"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Load Balancing Strategy"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"algorithm"}),": Determines how requests are distributed","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"round-robin"}),": Rotates through providers sequentially"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"weighted"}),": Uses provider weights to distribute traffic"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"weight"}),": Higher weights receive proportionally more traffic","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Example: weight 50/50 splits traffic equally"}),"\n",(0,s.jsx)(n.li,{children:"Example: weight 70/30 sends 70% to first provider"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["Multiple providers can serve the same model type","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:'Requests for "gpt-4" could go to either provider'}),"\n",(0,s.jsx)(n.li,{children:"Helps with redundancy and cost optimization"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Fallback Strategy"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"priority"}),": Controls the failover sequence","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Priority 1 providers are tried first"}),"\n",(0,s.jsx)(n.li,{children:"Higher numbers are used as backups"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["Health checks determine availability","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Unhealthy providers are skipped"}),"\n",(0,s.jsx)(n.li,{children:"Traffic automatically routes to healthy providers"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["Model availability affects routing","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"If requested model isn't available, tries next provider"}),"\n",(0,s.jsx)(n.li,{children:"Falls back to provider's default model if specified"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Authentication"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"credentials"}),": Provider API keys"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"headers"}),": Additional required headers"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Health Checking"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"passive"}),": Enable passive health checks"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"threshold"}),": Number of failures before marking unhealthy"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"interval"}),": Time between health checks in seconds"]}),"\n",(0,s.jsxs)(n.li,{children:["Affects both load balancing and failover","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Unhealthy providers are removed from rotation"}),"\n",(0,s.jsx)(n.li,{children:"Automatically restored when health returns"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"step-3-verify-configuration",children:"Step 3: Verify Configuration"}),"\n",(0,s.jsx)(n.p,{children:"Check that your upstream is properly configured:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"curl http://localhost:8080/api/v1/gateways/{gateway-id}/upstreams/{upstream-id}\n"})}),"\n",(0,s.jsx)(n.h2,{id:"step-4-test-load-balancing",children:"Step 4: Test Load Balancing"}),"\n",(0,s.jsx)(n.p,{children:"Test the load balancing across providers:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'# Test with OpenAI-compatible endpoint\ncurl -X POST http://your-gateway-domain/v1/chat/completions \\\n  -H "Content-Type: application/json" \\\n  -H "X-Api-Key: your-api-key" \\\n  -d \'{\n    "model": "gpt-4o-mini",\n    "messages": [{"role": "user", "content": "Hello"}]\n  }\'\n'})}),"\n",(0,s.jsxs)(n.p,{children:["The response headers will include ",(0,s.jsx)(n.code,{children:"X-Selected-Provider"})," to show which provider handled the request."]}),"\n",(0,s.jsx)(n.h2,{id:"next-steps",children:"Next Steps"}),"\n",(0,s.jsx)(n.p,{children:"Now that you have configured your upstream:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"/neuraltrust/ai-gateway/getting-started/step-by-step/add-service",children:"Configure a Service"})," to use this upstream"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"additional-resources",children:"Additional Resources"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"../concepts/gateway.md",children:"Gateway Concepts"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"../concepts/plugins.md",children:"Plugin System"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"/neuraltrust/ai-gateway/getting-started/step-by-step/rate-limiting",children:"Rate Limiting"})}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"troubleshooting",children:"Troubleshooting"}),"\n",(0,s.jsx)(n.p,{children:"Common issues and solutions:"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Provider Issues"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Verify API keys are valid"}),"\n",(0,s.jsx)(n.li,{children:"Check provider endpoints"}),"\n",(0,s.jsx)(n.li,{children:"Confirm model availability"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Load Balancing"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Check provider weights"}),"\n",(0,s.jsx)(n.li,{children:"Monitor distribution"}),"\n",(0,s.jsx)(n.li,{children:"Verify failover behavior"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Authentication"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Verify credential format"}),"\n",(0,s.jsx)(n.li,{children:"Check required headers"}),"\n",(0,s.jsx)(n.li,{children:"Test provider access"}),"\n"]}),"\n"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>l,x:()=>a});var r=i(6540);const s={},t=r.createContext(s);function l(e){const n=r.useContext(t);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:l(e.components),r.createElement(t.Provider,{value:n},e.children)}}}]);