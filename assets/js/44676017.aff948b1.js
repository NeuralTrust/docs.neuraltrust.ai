"use strict";(self.webpackChunkneuraltrust_docs=self.webpackChunkneuraltrust_docs||[]).push([[4960],{5696:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>r,default:()=>u,frontMatter:()=>l,metadata:()=>s,toc:()=>o});const s=JSON.parse('{"id":"sdks/python-sdk/api-reference/evaluation-set-client","title":"EvaluationSetClient","description":"Client for managing evaluation sets through the NeuralTrust API. This class provides methods for creating, retrieving, updating, deleting, and running evaluation sets.","source":"@site/docs/sdks/python-sdk/api-reference/evaluation-set-client.md","sourceDirName":"sdks/python-sdk/api-reference","slug":"/sdks/python-sdk/api-reference/evaluation-set-client","permalink":"/neuraltrust/sdks/python-sdk/api-reference/evaluation-set-client","draft":false,"unlisted":false,"editUrl":"https://github.com/NeuralTrust/neuraltrust/blob/main/docs/sdks/python-sdk/api-reference/evaluation-set-client.md","tags":[],"version":"current","sidebarPosition":6,"frontMatter":{"sidebar_position":6},"sidebar":"tutorialSidebar","previous":{"title":"TestsetClient","permalink":"/neuraltrust/sdks/python-sdk/api-reference/testset-client"},"next":{"title":"TraceClient","permalink":"/neuraltrust/sdks/python-sdk/api-reference/trace-client"}}');var i=t(4848),a=t(8453);const l={sidebar_position:6},r="EvaluationSetClient",d={},o=[{value:"Methods",id:"methods",level:2},{value:"<code>list()</code>",id:"list",level:3},{value:"Parameters:",id:"parameters",level:4},{value:"Returns:",id:"returns",level:4},{value:"<code>create()</code>",id:"create",level:3},{value:"Parameters:",id:"parameters-1",level:4},{value:"Returns:",id:"returns-1",level:4},{value:"<code>get()</code>",id:"get",level:3},{value:"Parameters:",id:"parameters-2",level:4},{value:"Returns:",id:"returns-2",level:4},{value:"<code>update()</code>",id:"update",level:3},{value:"Parameters:",id:"parameters-3",level:4},{value:"Returns:",id:"returns-3",level:4},{value:"<code>delete()</code>",id:"delete",level:3},{value:"Parameters:",id:"parameters-4",level:4},{value:"<code>run()</code>",id:"run",level:3},{value:"Parameters:",id:"parameters-5",level:4},{value:"Usage Example",id:"usage-example",level:2}];function c(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,a.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"evaluationsetclient",children:"EvaluationSetClient"})}),"\n",(0,i.jsx)(n.p,{children:"Client for managing evaluation sets through the NeuralTrust API. This class provides methods for creating, retrieving, updating, deleting, and running evaluation sets."}),"\n",(0,i.jsx)(n.h2,{id:"methods",children:"Methods"}),"\n",(0,i.jsx)(n.h3,{id:"list",children:(0,i.jsx)(n.code,{children:"list()"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"def list(\n    self,\n    *,\n    request_options: Optional[RequestOptions] = None\n) -> EvaluationSetResponseList\n"})}),"\n",(0,i.jsx)(n.p,{children:"Lists all evaluation sets."}),"\n",(0,i.jsx)(n.h4,{id:"parameters",children:"Parameters:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"request_options"})," (Optional[RequestOptions]): Request-specific configuration."]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"returns",children:"Returns:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"EvaluationSetResponseList"}),": List of evaluation sets."]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"create",children:(0,i.jsx)(n.code,{children:"create()"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"def create(\n    self,\n    *,\n    name: str,\n    description: str,\n    scheduler: Optional[str] = OMIT,\n    metadata: Optional[Metadata] = OMIT,\n    request_options: Optional[RequestOptions] = None\n) -> EvaluationSetResponse\n"})}),"\n",(0,i.jsx)(n.p,{children:"Creates a new evaluation set."}),"\n",(0,i.jsx)(n.h4,{id:"parameters-1",children:"Parameters:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"name"})," (str): Name of the evaluation set."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"description"})," (str): Description of the evaluation set."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"scheduler"})," (Optional[str]): Scheduler of the evaluation set."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"metadata"})," (Optional[Metadata]): Additional metadata for the evaluation set."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"request_options"})," (Optional[RequestOptions]): Request-specific configuration."]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"returns-1",children:"Returns:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"EvaluationSetResponse"}),": The created evaluation set."]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"get",children:(0,i.jsx)(n.code,{children:"get()"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"def get(\n    self,\n    id: str,\n    *,\n    request_options: Optional[RequestOptions] = None\n) -> EvaluationSetResponse\n"})}),"\n",(0,i.jsx)(n.p,{children:"Retrieves a specific evaluation set."}),"\n",(0,i.jsx)(n.h4,{id:"parameters-2",children:"Parameters:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"id"})," (str): ID of the evaluation set to retrieve."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"request_options"})," (Optional[RequestOptions]): Request-specific configuration."]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"returns-2",children:"Returns:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"EvaluationSetResponse"}),": The requested evaluation set."]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"update",children:(0,i.jsx)(n.code,{children:"update()"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"def update(\n    self,\n    id: str,\n    *,\n    name: str,\n    description: str,\n    scheduler: Optional[str] = OMIT,\n    metadata: Optional[Metadata] = OMIT,\n    request_options: Optional[RequestOptions] = None\n) -> EvaluationSetResponse\n"})}),"\n",(0,i.jsx)(n.p,{children:"Updates an existing evaluation set."}),"\n",(0,i.jsx)(n.h4,{id:"parameters-3",children:"Parameters:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"id"})," (str): ID of the evaluation set to update."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"name"})," (str): New name for the evaluation set."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"description"})," (str): New description for the evaluation set."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"scheduler"})," (Optional[str]): New scheduler for the evaluation set."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"metadata"})," (Optional[Metadata]): New metadata for the evaluation set."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"request_options"})," (Optional[RequestOptions]): Request-specific configuration."]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"returns-3",children:"Returns:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"EvaluationSetResponse"}),": The updated evaluation set."]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"delete",children:(0,i.jsx)(n.code,{children:"delete()"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"def delete(\n    self,\n    id: str,\n    *,\n    request_options: Optional[RequestOptions] = None\n) -> None\n"})}),"\n",(0,i.jsx)(n.p,{children:"Deletes an evaluation set."}),"\n",(0,i.jsx)(n.h4,{id:"parameters-4",children:"Parameters:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"id"})," (str): ID of the evaluation set to delete."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"request_options"})," (Optional[RequestOptions]): Request-specific configuration."]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"run",children:(0,i.jsx)(n.code,{children:"run()"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"def run(\n    self,\n    id: str,\n    *,\n    evaluation_set_run_id: Optional[str] = OMIT,\n    request_options: Optional[RequestOptions] = None\n) -> None\n"})}),"\n",(0,i.jsx)(n.p,{children:"Runs an evaluation set."}),"\n",(0,i.jsx)(n.h4,{id:"parameters-5",children:"Parameters:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"id"})," (str): ID of the evaluation set to run."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"evaluation_set_run_id"})," (Optional[str]): ID for the evaluation set run."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"request_options"})," (Optional[RequestOptions]): Request-specific configuration."]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"usage-example",children:"Usage Example"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'# Initialize the NeuralTrust client\nclient = NeuralTrust(api_key="your_api_key_here")\n\n# Create a new evaluation set\nevaluation_set = client.evaluation_set.create(\n    name="Test Evaluation Set",\n    description="A test evaluation set",\n    metadata={"environment": "staging"}\n)\n\n# Get an evaluation set by ID\nretrieved_set = client.evaluation_set.get(id=evaluation_set.id)\n\n# Update an evaluation set\nupdated_set = client.evaluation_set.update(\n    id=evaluation_set.id,\n    name="Updated Test Set",\n    description="An updated test evaluation set"\n)\n\n# Run an evaluation set\nclient.evaluation_set.run(id=evaluation_set.id)\n\n# List all evaluation sets\nall_sets = client.evaluation_set.list()\n\n# Delete an evaluation set\nclient.evaluation_set.delete(id=evaluation_set.id)\n'})})]})}function u(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>l,x:()=>r});var s=t(6540);const i={},a=s.createContext(i);function l(e){const n=s.useContext(a);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:l(e.components),s.createElement(a.Provider,{value:n},e.children)}}}]);