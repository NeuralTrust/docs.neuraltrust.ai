"use strict";(self.webpackChunkneuraltrust_docs=self.webpackChunkneuraltrust_docs||[]).push([[153],{5561:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>d,contentTitle:()=>a,default:()=>u,frontMatter:()=>s,metadata:()=>l,toc:()=>o});const l=JSON.parse('{"id":"AI Gateway/Development/full-dev","title":"Full Development Guide","description":"Prerequisites","source":"@site/docs/AI Gateway/Development/full-dev.md","sourceDirName":"AI Gateway/Development","slug":"/AI Gateway/Development/full-dev","permalink":"/neuraltrust/AI Gateway/Development/full-dev","draft":false,"unlisted":false,"editUrl":"https://github.com/NeuralTrust/neuraltrust/blob/main/docs/AI%20Gateway/Development/full-dev.md","tags":[],"version":"current","sidebarPosition":5,"frontMatter":{"sidebar_position":5},"sidebar":"tutorialSidebar","previous":{"title":"Development","permalink":"/neuraltrust/AI Gateway/Development/"},"next":{"title":"Architecture","permalink":"/neuraltrust/AI Gateway/architecture"}}');var t=i(4848),r=i(8453);const s={sidebar_position:5},a="Full Development Guide",d={},o=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Project Structure",id:"project-structure",level:2},{value:"Testing",id:"testing",level:2},{value:"Plugin System",id:"plugin-system",level:2},{value:"Parallel Plugin Execution",id:"parallel-plugin-execution",level:2},{value:"Example Configuration",id:"example-configuration",level:3},{value:"Execution Flow:",id:"execution-flow",level:3},{value:"Plugin Types:",id:"plugin-types",level:3},{value:"Traffic Management",id:"traffic-management",level:2},{value:"Round-Robin Distribution",id:"round-robin-distribution",level:3},{value:"Weighted Distribution",id:"weighted-distribution",level:3},{value:"Implementation Details",id:"implementation-details",level:3},{value:"Rule Validation",id:"rule-validation",level:2},{value:"Required Fields",id:"required-fields",level:3},{value:"Target Validation",id:"target-validation",level:3},{value:"Method Validation",id:"method-validation",level:3},{value:"Plugin Chain Validation",id:"plugin-chain-validation",level:3}];function c(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"full-development-guide",children:"Full Development Guide"})}),"\n",(0,t.jsx)(n.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:"Go 1.22+"}),"\n",(0,t.jsx)(n.li,{children:"Docker and Docker Compose"}),"\n",(0,t.jsx)(n.li,{children:"Redis"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"project-structure",children:"Project Structure"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:".\n\u251c\u2500\u2500 cmd/\n\u2502   \u2514\u2500\u2500 gateway/          # Application entry points\n\u251c\u2500\u2500 internal/\n\u2502   \u251c\u2500\u2500 cache/           # Redis cache implementation\n\u2502   \u251c\u2500\u2500 middleware/      # HTTP middleware\n\u2502   \u251c\u2500\u2500 plugins/         # Plugin implementations\n\u2502   \u251c\u2500\u2500 proxy/           # Request forwarding logic\n\u2502   \u251c\u2500\u2500 types/           # Common types\n\u2502   \u2514\u2500\u2500 server/          # HTTP server implementation\n\u251c\u2500\u2500 scripts/             # Development and test scripts\n\u251c\u2500\u2500 config.yaml          # Configuration file\n\u2514\u2500\u2500 docker-compose.yaml  # Redis setup\n"})}),"\n",(0,t.jsx)(n.h2,{id:"testing",children:"Testing"}),"\n",(0,t.jsx)(n.p,{children:"Run all tests:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"./scripts/test.sh\n"})}),"\n",(0,t.jsx)(n.p,{children:"Run specific tests:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"./scripts/test_tenant.sh    # Test tenant management\n./scripts/test_rate_limiter.sh  # Test rate limiting\n"})}),"\n",(0,t.jsx)(n.h2,{id:"plugin-system",children:"Plugin System"}),"\n",(0,t.jsx)(n.p,{children:"Available plugins:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"rate_limiter"}),": Rate limiting functionality."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"content_validator"}),": Request/response content validation"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"security_validator"}),": Security checks and validations."]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Plugin stages:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"pre_request"}),": Before forwarding."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"post_request"}),": After forwarding, before response."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"pre_response"}),": Before sending response."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"post_response"}),": After sending response."]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"parallel-plugin-execution",children:"Parallel Plugin Execution"}),"\n",(0,t.jsx)(n.p,{children:"The plugin system supports both sequential and parallel execution of plugins. This is controlled through two mechanisms:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Priority Levels"}),": Plugins are executed in order of their priority (lower numbers run first)."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parallel Flag"}),": Plugins with the same priority can run in parallel if configured to do so."]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"example-configuration",children:"Example Configuration"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-go",children:'"plugin_chain": [\n    {\n        "name": "rate_limiter",\n        "enabled": true,\n        "parallel": false,  // Must run sequentially\n        "priority": 1      // Runs first\n    },\n    {\n        "name": "external_validator",\n        "enabled": true,\n        "parallel": true,   // Can run in parallel\n        "priority": 2      // Runs after rate_limiter\n    },\n    {\n        "name": "content_validator",\n        "enabled": true,\n        "parallel": true,   // Can run in parallel\n        "priority": 2      // Runs alongside external_validator\n    }\n]\n'})}),"\n",(0,t.jsx)(n.h3,{id:"execution-flow",children:"Execution Flow:"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:"Plugins are grouped by priority"}),"\n",(0,t.jsx)(n.li,{children:"Each priority group is executed in order (lowest to highest)"}),"\n",(0,t.jsxs)(n.li,{children:["Within each priority group:","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"If there's only one plugin, it runs sequentially"}),"\n",(0,t.jsx)(n.li,{children:"If there are multiple plugins and they support parallel execution, they run concurrently"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"plugin-types",children:"Plugin Types:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Sequential Plugins"})," (parallel: false):"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Need to maintain state"}),"\n",(0,t.jsx)(n.li,{children:"Order-dependent operations"}),"\n",(0,t.jsx)(n.li,{children:"Example: Rate Limiter"}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Parallel Plugins"})," (parallel: true):"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Stateless operations"}),"\n",(0,t.jsx)(n.li,{children:"Order-independent"}),"\n",(0,t.jsx)(n.li,{children:"Example: External Validators"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"This design allows for optimal performance by running independent operations concurrently while maintaining necessary ordering constraints."}),"\n",(0,t.jsx)(n.h2,{id:"traffic-management",children:"Traffic Management"}),"\n",(0,t.jsx)(n.p,{children:"The gateway supports two methods of traffic distribution across multiple target endpoints:\nRound-Robin Distribution"}),"\n",(0,t.jsx)(n.h3,{id:"round-robin-distribution",children:"Round-Robin Distribution"}),"\n",(0,t.jsx)(n.p,{children:"When multiple targets are specified without weights, requests are distributed evenly across all targets in a round-robin fashion. This is useful for basic load balancing."}),"\n",(0,t.jsx)(n.p,{children:"Example rule with round-robin distribution:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'curl -X POST http://localhost:8080/api/v1/tenants/{tenant_id}/rules \\\n  -H "Authorization: Bearer {api_key}" \\\n  -H "Content-Type: application/json" \\\n  -d \'{\n    "path": "/api/*",\n    "targets": [\n      {"url": "https://api1.example.com"},\n      {"url": "https://api2.example.com"},\n      {"url": "https://api3.example.com"}\n    ],\n    "methods": ["GET", "POST"],\n    "strip_path": true\n  }\'\n'})}),"\n",(0,t.jsx)(n.h3,{id:"weighted-distribution",children:"Weighted Distribution"}),"\n",(0,t.jsx)(n.p,{children:"For more precise traffic control, you can specify percentage-based weights. The weights must sum to 100%. This is particularly useful for:"}),"\n",(0,t.jsx)(n.p,{children:"Canary deployments\nA/B testing\nGradual traffic migration\nBlue/Green deployments"}),"\n",(0,t.jsx)(n.p,{children:"Example rule with weighted distribution:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'curl -X POST http://localhost:8080/api/v1/tenants/{tenant_id}/rules \\\n  -H "Authorization: Bearer {api_key}" \\\n  -H "Content-Type: application/json" \\\n  -d \'{\n    "path": "/api/*",\n    "targets": [\n      {\n        "url": "https://production.example.com",\n        "weight": 90\n      },\n      {\n        "url": "https://canary.example.com",\n        "weight": 10\n      }\n    ],\n    "methods": ["GET", "POST"],\n    "strip_path": true\n  }\'\n'})}),"\n",(0,t.jsx)(n.h3,{id:"implementation-details",children:"Implementation Details"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Uses Redis for distributed counter management"}),"\n",(0,t.jsx)(n.li,{children:"Ensures consistent distribution across multiple gateway instances"}),"\n",(0,t.jsx)(n.li,{children:"Automatically falls back to round-robin if weights don't sum to 100%"}),"\n",(0,t.jsx)(n.li,{children:"Includes TTL on counters to prevent memory leaks"}),"\n",(0,t.jsx)(n.li,{children:"Handles Redis failures gracefully with random selection fallback"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"rule-validation",children:"Rule Validation"}),"\n",(0,t.jsx)(n.p,{children:"When creating or updating rules, the following validations are applied:"}),"\n",(0,t.jsx)(n.h3,{id:"required-fields",children:"Required Fields"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"path: Must be non-empty"}),"\n",(0,t.jsx)(n.li,{children:"methods: Must contain at least one valid HTTP method"}),"\n",(0,t.jsx)(n.li,{children:"targets: Must contain at least one target"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"target-validation",children:"Target Validation"}),"\n",(0,t.jsx)(n.p,{children:"Each target must have a valid URL"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["When using weighted distribution:","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"All weights must be positive integers"}),"\n",(0,t.jsx)(n.li,{children:"Total weights must sum to 100%"}),"\n",(0,t.jsx)(n.li,{children:"If any target has a weight, all targets must have weights"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Example with validation errors:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'# Invalid: Weights don\'t sum to 100\ncurl -X POST http://localhost:8080/api/v1/tenants/{tenant_id}/rules \\\n  -H "Authorization: Bearer {api_key}" \\\n  -H "Content-Type: application/json" \\\n  -d \'{\n    "path": "/api/*",\n    "targets": [\n      {\n        "url": "https://production.example.com",\n        "weight": 80  # Error: weights sum to 80\n      }\n    ],\n    "methods": ["GET"]\n  }\'\n\n# Response:\n{\n    "error": "when using weighted distribution, weights must sum to 100 (got 80)"\n}\n'})}),"\n",(0,t.jsx)(n.h3,{id:"method-validation",children:"Method Validation"}),"\n",(0,t.jsx)(n.p,{children:"Valid HTTP methods:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"GET"}),"\n",(0,t.jsx)(n.li,{children:"POST"}),"\n",(0,t.jsx)(n.li,{children:"PUT"}),"\n",(0,t.jsx)(n.li,{children:"DELETE"}),"\n",(0,t.jsx)(n.li,{children:"PATCH"}),"\n",(0,t.jsx)(n.li,{children:"HEAD"}),"\n",(0,t.jsx)(n.li,{children:"OPTIONS"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"plugin-chain-validation",children:"Plugin Chain Validation"}),"\n",(0,t.jsx)(n.p,{children:"For each plugin in the chain:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Name is required"}),"\n",(0,t.jsxs)(n.li,{children:["Stage must be one of:","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"pre_request"}),"\n",(0,t.jsx)(n.li,{children:"post_request"}),"\n",(0,t.jsx)(n.li,{children:"pre_response"}),"\n",(0,t.jsx)(n.li,{children:"post_response"}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.li,{children:"Priority must be between 0 and 999 (defaults to 0)"}),"\n",(0,t.jsx)(n.li,{children:"Settings are required and validated per plugin type"}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Example plugin configuration:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'{\n    "name": "external_validator",\n    "enabled": true,\n    "stage": "pre_request",\n    "priority": 1,\n    "settings": {\n        "endpoint": "http://validator.example.com",\n        "timeout": "5s"\n    }\n}\n'})})]})}function u(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>s,x:()=>a});var l=i(6540);const t={},r=l.createContext(t);function s(e){const n=l.useContext(r);return l.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:s(e.components),l.createElement(r.Provider,{value:n},e.children)}}}]);