"use strict";(self.webpackChunkneuraltrust_docs=self.webpackChunkneuraltrust_docs||[]).push([[7387],{7750:(t,e,a)=>{a.r(e),a.d(e,{assets:()=>c,contentTitle:()=>l,default:()=>d,frontMatter:()=>i,metadata:()=>n,toc:()=>o});const n=JSON.parse('{"id":"ai-gateway/getting-started/step-by-step/load-balancing","title":"Load Balancing","description":"Load balancing helps distribute AI model requests across multiple instances for better performance and reliability.","source":"@site/docs/ai-gateway/getting-started/step-by-step/load-balancing.md","sourceDirName":"ai-gateway/getting-started/step-by-step","slug":"/ai-gateway/getting-started/step-by-step/load-balancing","permalink":"/neuraltrust/ai-gateway/getting-started/step-by-step/load-balancing","draft":false,"unlisted":false,"editUrl":"https://github.com/NeuralTrust/neuraltrust/blob/main/docs/ai-gateway/getting-started/step-by-step/load-balancing.md","tags":[],"version":"current","sidebarPosition":7,"frontMatter":{"sidebar_position":7,"title":"Load Balancing"},"sidebar":"tutorialSidebar","previous":{"title":"Create Rules","permalink":"/neuraltrust/ai-gateway/getting-started/step-by-step/create-rules"},"next":{"title":"Rate Limiting","permalink":"/neuraltrust/ai-gateway/getting-started/step-by-step/rate-limiting"}}');var s=a(4848),r=a(8453);const i={sidebar_position:7,title:"Load Balancing"},l="Load Balancing",c={},o=[{value:"Configure Upstream Targets",id:"configure-upstream-targets",level:2},{value:"Load Balancing Algorithms",id:"load-balancing-algorithms",level:2},{value:"Health Checks",id:"health-checks",level:2},{value:"Target Weight and Priority",id:"target-weight-and-priority",level:2},{value:"Monitoring",id:"monitoring",level:2},{value:"Next Steps",id:"next-steps",level:2}];function h(t){const e={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",...(0,r.R)(),...t.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(e.header,{children:(0,s.jsx)(e.h1,{id:"load-balancing",children:"Load Balancing"})}),"\n",(0,s.jsx)(e.p,{children:"Load balancing helps distribute AI model requests across multiple instances for better performance and reliability."}),"\n",(0,s.jsx)(e.h2,{id:"configure-upstream-targets",children:"Configure Upstream Targets"}),"\n",(0,s.jsx)(e.p,{children:"Set up upstream targets for load balancing:"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-bash",children:"# Create an upstream\ncurl -X POST http://localhost:8001/upstreams \\\n  --data name=openai-upstream \\\n  --data algorithm=round-robin\n\n# Add targets to the upstream\ncurl -X POST http://localhost:8001/upstreams/openai-upstream/targets \\\n  --data target=api.openai.com:443 \\\n  --data weight=100\n\ncurl -X POST http://localhost:8001/upstreams/openai-upstream/targets \\\n  --data target=api2.openai.com:443 \\\n  --data weight=100\n"})}),"\n",(0,s.jsx)(e.h2,{id:"load-balancing-algorithms",children:"Load Balancing Algorithms"}),"\n",(0,s.jsx)(e.p,{children:"Choose from different load balancing algorithms:"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-bash",children:"# Round Robin balancing\ncurl -X POST http://localhost:8001/upstreams \\\n  --data name=ai-upstream \\\n  --data algorithm=round-robin\n\n# Least Connections\ncurl -X POST http://localhost:8001/upstreams \\\n  --data name=ai-upstream \\\n  --data algorithm=least-connections\n\n# Hash-based balancing\ncurl -X POST http://localhost:8001/upstreams \\\n  --data name=ai-upstream \\\n  --data algorithm=consistent-hashing \\\n  --data hash_on=header \\\n  --data hash_on_header=user-id\n"})}),"\n",(0,s.jsx)(e.h2,{id:"health-checks",children:"Health Checks"}),"\n",(0,s.jsx)(e.p,{children:"Configure health checks for targets:"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-bash",children:"# Add active health checks\ncurl -X PATCH http://localhost:8001/upstreams/ai-upstream \\\n  --data healthchecks.active.http_path=/health \\\n  --data healthchecks.active.healthy.interval=5 \\\n  --data healthchecks.active.unhealthy.interval=5\n\n# Add passive health checks\ncurl -X PATCH http://localhost:8001/upstreams/ai-upstream \\\n  --data healthchecks.passive.healthy.successes=3 \\\n  --data healthchecks.passive.unhealthy.http_failures=3\n"})}),"\n",(0,s.jsx)(e.h2,{id:"target-weight-and-priority",children:"Target Weight and Priority"}),"\n",(0,s.jsx)(e.p,{children:"Adjust target weights and priorities:"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-bash",children:"# Update target weight\ncurl -X POST http://localhost:8001/upstreams/ai-upstream/targets \\\n  --data target=api1.example.com:443 \\\n  --data weight=200\n\n# Set backup target\ncurl -X POST http://localhost:8001/upstreams/ai-upstream/targets \\\n  --data target=backup-api.example.com:443 \\\n  --data weight=100 \\\n  --data backup=true\n"})}),"\n",(0,s.jsx)(e.h2,{id:"monitoring",children:"Monitoring"}),"\n",(0,s.jsx)(e.p,{children:"Monitor load balancer status:"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-bash",children:"# Check upstream status\ncurl -X GET http://localhost:8001/upstreams/ai-upstream/health\n\n# Check target status\ncurl -X GET http://localhost:8001/upstreams/ai-upstream/targets\n\n# Get load balancer metrics\ncurl -X GET http://localhost:8001/metrics\n"})}),"\n",(0,s.jsx)(e.h2,{id:"next-steps",children:"Next Steps"}),"\n",(0,s.jsx)(e.p,{children:"After configuring load balancing:"}),"\n",(0,s.jsxs)(e.ol,{children:["\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.a,{href:"/neuraltrust/ai-gateway/getting-started/step-by-step/rate-limiting",children:"Set up Rate Limiting"})," to protect your services"]}),"\n"]})]})}function d(t={}){const{wrapper:e}={...(0,r.R)(),...t.components};return e?(0,s.jsx)(e,{...t,children:(0,s.jsx)(h,{...t})}):h(t)}},8453:(t,e,a)=>{a.d(e,{R:()=>i,x:()=>l});var n=a(6540);const s={},r=n.createContext(s);function i(t){const e=n.useContext(r);return n.useMemo((function(){return"function"==typeof t?t(e):{...e,...t}}),[e,t])}function l(t){let e;return e=t.disableParentContext?"function"==typeof t.components?t.components(s):t.components||s:i(t.components),n.createElement(r.Provider,{value:e},t.children)}}}]);