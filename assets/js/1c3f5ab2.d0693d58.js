"use strict";(self.webpackChunkneuraltrust_docs=self.webpackChunkneuraltrust_docs||[]).push([[7870],{4675:(e,n,l)=>{l.r(n),l.d(n,{assets:()=>o,contentTitle:()=>a,default:()=>h,frontMatter:()=>t,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"deployment/kubernetes/kubernetes-installation","title":"Kubernetes Installation","description":"Prerequisites","source":"@site/docs/deployment/kubernetes/installation.md","sourceDirName":"deployment/kubernetes","slug":"/deployment/kubernetes/kubernetes-installation","permalink":"/deployment/kubernetes/kubernetes-installation","draft":false,"unlisted":false,"editUrl":"https://github.com/NeuralTrust/neuraltrust/blob/main/docs/deployment/kubernetes/installation.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"id":"kubernetes-installation","title":"Kubernetes Installation","sidebar_position":2},"sidebar":"tutorialSidebar","previous":{"title":"Architecture","permalink":"/deployment/architecture"},"next":{"title":"Docker Installation","permalink":"/deployment/docker/docker-installation"}}');var i=l(4848),r=l(8453);const t={id:"kubernetes-installation",title:"Kubernetes Installation",sidebar_position:2},a="Installing on Kubernetes",o={},c=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Required Tools",id:"required-tools",level:3},{value:"Installation Steps",id:"installation-steps",level:2},{value:"1. Environment Setup",id:"1-environment-setup",level:3},{value:"2. Configure Environment Variables",id:"2-configure-environment-variables",level:3},{value:"Common Variables",id:"common-variables",level:4},{value:"Data Plane API Variables",id:"data-plane-api-variables",level:4},{value:"Worker Variables",id:"worker-variables",level:4},{value:"3. Run Installation",id:"3-run-installation",level:3},{value:"Installation Options",id:"installation-options",level:3},{value:"Domain Configuration",id:"domain-configuration",level:2},{value:"DNS Setup",id:"dns-setup",level:3},{value:"TLS/SSL Certificates",id:"tlsssl-certificates",level:3},{value:"Connecting to Control Plane",id:"connecting-to-control-plane",level:2},{value:"Upgrading",id:"upgrading",level:2},{value:"Troubleshooting",id:"troubleshooting",level:2}];function d(e){const n={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"installing-on-kubernetes",children:"Installing on Kubernetes"})}),"\n",(0,i.jsx)(n.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,i.jsx)(n.p,{children:"Before installing NeuralTrust, ensure you have:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Kubernetes cluster (v1.20+)","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Minimum of 3 nodes"}),"\n",(0,i.jsx)(n.li,{children:"Each node: 4 vCPUs, 16 GB Memory"}),"\n",(0,i.jsx)(n.li,{children:"Total cluster resources: 12+ vCPUs, 48+ GB Memory"}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.li,{children:"Helm (v3.8+)"}),"\n",(0,i.jsx)(n.li,{children:"kubectl configured to access your cluster"}),"\n",(0,i.jsx)(n.li,{children:"OpenAI API key"}),"\n",(0,i.jsx)(n.li,{children:"HuggingFace token (provided by NeuralTrust)"}),"\n",(0,i.jsx)(n.li,{children:"Google Container Registry (GCR) service account key (provided by NeuralTrust)"}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"required-tools",children:"Required Tools"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"kubectl"}),": For interacting with the Kubernetes cluster"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"helm"}),": For deploying Kubernetes applications"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"yq"}),": For YAML processing"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"jq"}),": For JSON processing"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"installation-steps",children:"Installation Steps"}),"\n",(0,i.jsx)(n.h3,{id:"1-environment-setup",children:"1. Environment Setup"}),"\n",(0,i.jsx)(n.p,{children:"First, clone the repository and set up environment files:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# Clone the repository\ngit clone https://github.com/NeuralTrust/neuraltrust-helm-charts.git\ncd neuraltrust-helm-charts\n\n# Create environment file\ncp .env.example .env.dev  # For development\n# or\ncp .env.example .env.prod # For production\n"})}),"\n",(0,i.jsx)(n.h3,{id:"2-configure-environment-variables",children:"2. Configure Environment Variables"}),"\n",(0,i.jsx)(n.p,{children:"Required environment variables:"}),"\n",(0,i.jsx)(n.h4,{id:"common-variables",children:"Common Variables"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"ENVIRONMENT"}),": Environment (dev/prod)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"EMAIL"}),": Email for Let's Encrypt certificates"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"OPENAI_API_KEY"}),": OpenAI API key"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"HUGGINGFACE_TOKEN"}),": HuggingFace token (provided by NeuralTrust)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"GCR_KEY_FILE"}),": Path to GCR service account key file"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"data-plane-api-variables",children:"Data Plane API Variables"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"DATA_PLANE_API_URL"}),": Full URL for the Data Plane API"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"DATA_PLANE_API_IMAGE_REPOSITORY"}),": Docker image repository"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"DATA_PLANE_API_IMAGE_TAG"}),": Docker image tag"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"DATA_PLANE_API_IMAGE_PULL_POLICY"}),": Image pull policy"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"DATA_PLANE_JWT_SECRET"}),": JWT secret for Control Plane authentication"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"worker-variables",children:"Worker Variables"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"WORKER_IMAGE_REPOSITORY"}),": Docker image repository"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"WORKER_IMAGE_TAG"}),": Docker image tag"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"WORKER_IMAGE_PULL_POLICY"}),": Image pull policy"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"3-run-installation",children:"3. Run Installation"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# Set environment\nexport ENVIRONMENT=dev  # or prod\n\n# Run installation script\n./install-data-plane.sh\n"})}),"\n",(0,i.jsx)(n.p,{children:"The script will:"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"Create namespace (default: neuraltrust)"}),"\n",(0,i.jsx)(n.li,{children:"Install cert-manager for SSL certificates"}),"\n",(0,i.jsx)(n.li,{children:"Install NGINX Ingress Controller"}),"\n",(0,i.jsx)(n.li,{children:"Create required secrets"}),"\n",(0,i.jsx)(n.li,{children:"Install ClickHouse database"}),"\n",(0,i.jsx)(n.li,{children:"Install Kafka for messaging"}),"\n",(0,i.jsx)(n.li,{children:"Deploy Data Plane components"}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"installation-options",children:"Installation Options"}),"\n",(0,i.jsx)(n.p,{children:"Skip ingress resources:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"./install-data-plane.sh --skip-ingress\n"})}),"\n",(0,i.jsx)(n.p,{children:"Skip cert-manager installation:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"./install-data-plane.sh --skip-cert-manager\n"})}),"\n",(0,i.jsx)(n.p,{children:"Or use values file:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"global:\n  ingress:\n    enabled: false\n    controller:\n      enabled: false\n  certManager:\n    enabled: false\n"})}),"\n",(0,i.jsx)(n.h2,{id:"domain-configuration",children:"Domain Configuration"}),"\n",(0,i.jsx)(n.h3,{id:"dns-setup",children:"DNS Setup"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["Create a subdomain for your Data Plane API (e.g., ",(0,i.jsx)(n.code,{children:"dataplane.yourdomain.com"}),")"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Configure CNAME record:"}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"dataplane.yourdomain.com.  IN  CNAME  <your-ingress-controller-address>\n"})}),"\n",(0,i.jsx)(n.p,{children:"Get ingress controller address:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"kubectl get svc -n neuraltrust ingress-nginx-controller -o jsonpath='{.status.loadBalancer.ingress[0].ip}'\n"})}),"\n",(0,i.jsxs)(n.ol,{start:"3",children:["\n",(0,i.jsx)(n.li,{children:"Alternative: Use A record:"}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"dataplane.yourdomain.com.  IN  A  <your-ingress-controller-ip>\n"})}),"\n",(0,i.jsx)(n.h3,{id:"tlsssl-certificates",children:"TLS/SSL Certificates"}),"\n",(0,i.jsx)(n.p,{children:"The installation automatically configures Let's Encrypt certificates. Ensure:"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"Domain is publicly accessible"}),"\n",(0,i.jsx)(n.li,{children:"DNS propagation is complete"}),"\n",(0,i.jsxs)(n.li,{children:["Valid email address in ",(0,i.jsx)(n.code,{children:"EMAIL"})," variable"]}),"\n"]}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Note"}),": For custom certificates, contact NeuralTrust support."]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"connecting-to-control-plane",children:"Connecting to Control Plane"}),"\n",(0,i.jsx)(n.p,{children:"After installation:"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"Log in to NeuralTrust portal"}),"\n",(0,i.jsx)(n.li,{children:'Navigate to "Data Plane" section'}),"\n",(0,i.jsx)(n.li,{children:"Add new Data Plane connection"}),"\n",(0,i.jsx)(n.li,{children:"Enter Data Plane API endpoint"}),"\n",(0,i.jsx)(n.li,{children:"Enter JWT secret from installation"}),"\n",(0,i.jsx)(n.li,{children:"Save connection"}),"\n"]}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Important"}),": Save the JWT secret displayed during installation for Control Plane connection."]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"upgrading",children:"Upgrading"}),"\n",(0,i.jsx)(n.p,{children:"To upgrade existing installation:"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"Update environment variables as needed"}),"\n",(0,i.jsx)(n.li,{children:"Run installation script again:"}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"./install-data-plane.sh\n"})}),"\n",(0,i.jsx)(n.p,{children:"The Helm charts will detect existing installations and perform an upgrade."}),"\n",(0,i.jsx)(n.h2,{id:"troubleshooting",children:"Troubleshooting"}),"\n",(0,i.jsx)(n.p,{children:"Common issues and solutions:"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:"Pod startup failures"})}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"kubectl logs -n neuraltrust <pod-name>\n"})}),"\n",(0,i.jsxs)(n.ol,{start:"2",children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:"Database connection issues"})}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"kubectl get pods -n neuraltrust | grep clickhouse\n"})}),"\n",(0,i.jsxs)(n.ol,{start:"3",children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:"API key errors"})}),"\n"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Verify OpenAI API key and HuggingFace token"}),"\n"]}),"\n",(0,i.jsxs)(n.ol,{start:"4",children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:"Ingress issues"})}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"kubectl get ingress -n neuraltrust\n"})}),"\n",(0,i.jsxs)(n.ol,{start:"5",children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:"Certificate issues"})}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"kubectl get certificates -n neuraltrust\n"})}),"\n",(0,i.jsxs)(n.ol,{start:"6",children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:"Control Plane connection issues"})}),"\n"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Verify Data Plane API endpoint is accessible"}),"\n",(0,i.jsx)(n.li,{children:"Confirm JWT token is correct"}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["For additional help, contact ",(0,i.jsx)(n.a,{href:"mailto:support@neuraltrust.ai",children:"support@neuraltrust.ai"})]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},8453:(e,n,l)=>{l.d(n,{R:()=>t,x:()=>a});var s=l(6540);const i={},r=s.createContext(i);function t(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:t(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);