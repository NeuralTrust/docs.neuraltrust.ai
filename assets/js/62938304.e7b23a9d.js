"use strict";(self.webpackChunkneuraltrust_docs=self.webpackChunkneuraltrust_docs||[]).push([[1484],{1992:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>u,frontMatter:()=>a,metadata:()=>i,toc:()=>o});const i=JSON.parse('{"id":"ai-gateway/getting-started/step-by-step/add-service","title":"Configure a Service","description":"This guide will walk you through adding your first service in AI Gateway. A service represents your backend API or AI model endpoint that you want to expose through the gateway.","source":"@site/docs/ai-gateway/getting-started/step-by-step/add-service.md","sourceDirName":"ai-gateway/getting-started/step-by-step","slug":"/ai-gateway/getting-started/step-by-step/add-service","permalink":"/neuraltrust/ai-gateway/getting-started/step-by-step/add-service","draft":false,"unlisted":false,"editUrl":"https://github.com/NeuralTrust/neuraltrust/blob/main/docs/ai-gateway/getting-started/step-by-step/add-service.md","tags":[],"version":"current","sidebarPosition":6,"frontMatter":{"sidebar_position":6,"title":"Configure a Service"},"sidebar":"tutorialSidebar","previous":{"title":"Configure an Upstream","permalink":"/neuraltrust/ai-gateway/getting-started/step-by-step/configure-upstream"},"next":{"title":"Create Rules","permalink":"/neuraltrust/ai-gateway/getting-started/step-by-step/create-rules"}}');var s=t(4848),r=t(8453);const a={sidebar_position:6,title:"Configure a Service"},l="Configure a Service",c={},o=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Step 1: Plan Your Service",id:"step-1-plan-your-service",level:2},{value:"Step 2: Create the Service",id:"step-2-create-the-service",level:2},{value:"Step 3: Configure Service Options",id:"step-3-configure-service-options",level:2},{value:"Step 4: Add Authentication",id:"step-4-add-authentication",level:2},{value:"Step 5: Verify Configuration",id:"step-5-verify-configuration",level:2},{value:"Step 6: Test the Service",id:"step-6-test-the-service",level:2},{value:"Next Steps",id:"next-steps",level:2},{value:"Troubleshooting",id:"troubleshooting",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"configure-a-service",children:"Configure a Service"})}),"\n",(0,s.jsx)(n.p,{children:"This guide will walk you through adding your first service in AI Gateway. A service represents your backend API or AI model endpoint that you want to expose through the gateway."}),"\n",(0,s.jsx)(n.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,s.jsx)(n.p,{children:"Before you begin, make sure you have:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"AI Gateway installed and running"}),"\n",(0,s.jsxs)(n.li,{children:["An upstream configured (see ",(0,s.jsx)(n.a,{href:"/neuraltrust/ai-gateway/getting-started/step-by-step/configure-upstream",children:"Configure an Upstream"}),")"]}),"\n",(0,s.jsx)(n.li,{children:"Access to the Admin API"}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"step-1-plan-your-service",children:"Step 1: Plan Your Service"}),"\n",(0,s.jsx)(n.p,{children:"Decide on your service configuration:"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"Choose a meaningful name for your service"}),"\n",(0,s.jsx)(n.li,{children:"Determine which upstream to use"}),"\n",(0,s.jsx)(n.li,{children:"Plan your service type (e.g., OpenAI, Anthropic, Custom)"}),"\n",(0,s.jsx)(n.li,{children:"Identify required plugins"}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"step-2-create-the-service",children:"Step 2: Create the Service"}),"\n",(0,s.jsx)(n.p,{children:"Create your service using the Admin API:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'curl -X POST http://localhost:8080/api/v1/gateways/{gateway-id}/services \\\n  -H "Content-Type: application/json" \\\n  -d \'{\n    "name": "openai-service",\n    "upstream_id": "{upstream-id}",\n    "type": "openai",\n    "description": "OpenAI API Service"\n  }\'\n'})}),"\n",(0,s.jsx)(n.h2,{id:"step-3-configure-service-options",children:"Step 3: Configure Service Options"}),"\n",(0,s.jsx)(n.p,{children:"Set additional service options:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'curl -X PATCH http://localhost:8080/api/v1/gateways/{gateway-id}/services/{service-id} \\\n  -H "Content-Type: application/json" \\\n  -d \'{\n    "connect_timeout": 60000,\n    "write_timeout": 60000,\n    "read_timeout": 60000,\n    "retries": 5\n  }\'\n'})}),"\n",(0,s.jsx)(n.h2,{id:"step-4-add-authentication",children:"Step 4: Add Authentication"}),"\n",(0,s.jsx)(n.p,{children:"Configure service authentication (if required):"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'curl -X POST http://localhost:8080/api/v1/gateways/{gateway-id}/services/{service-id}/plugins \\\n  -H "Content-Type: application/json" \\\n  -d \'{\n    "name": "key-auth",\n    "config": {\n      "key_names": ["x-api-key"]\n    }\n  }\'\n'})}),"\n",(0,s.jsx)(n.h2,{id:"step-5-verify-configuration",children:"Step 5: Verify Configuration"}),"\n",(0,s.jsx)(n.p,{children:"Check that your service is properly configured:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"curl http://localhost:8080/api/v1/gateways/{gateway-id}/services/{service-id}\n"})}),"\n",(0,s.jsx)(n.h2,{id:"step-6-test-the-service",children:"Step 6: Test the Service"}),"\n",(0,s.jsx)(n.p,{children:"Verify that the service is working:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"curl http://localhost:8080/api/v1/gateways/{gateway-id}/services/{service-id}/health\n"})}),"\n",(0,s.jsx)(n.h2,{id:"next-steps",children:"Next Steps"}),"\n",(0,s.jsx)(n.p,{children:"Now that you have configured your service:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"/neuraltrust/ai-gateway/getting-started/step-by-step/create-rules",children:"Create Rules"})," to route traffic to your service"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"./enable-plugins.md",children:"Enable Plugins"})," for additional functionality"]}),"\n",(0,s.jsxs)(n.li,{children:["Learn about ",(0,s.jsx)(n.a,{href:"../concepts/consumer-groups.md",children:"Consumer Groups"})]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"troubleshooting",children:"Troubleshooting"}),"\n",(0,s.jsx)(n.p,{children:"Common issues and solutions:"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Connection Issues"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Verify upstream is healthy"}),"\n",(0,s.jsx)(n.li,{children:"Check timeout settings"}),"\n",(0,s.jsx)(n.li,{children:"Review network connectivity"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Authentication Problems"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Verify API keys"}),"\n",(0,s.jsx)(n.li,{children:"Check plugin configuration"}),"\n",(0,s.jsx)(n.li,{children:"Review access policies"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Performance Issues"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Check timeout values"}),"\n",(0,s.jsx)(n.li,{children:"Verify retry settings"}),"\n",(0,s.jsx)(n.li,{children:"Monitor service health"}),"\n"]}),"\n"]}),"\n"]})]})}function u(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>l});var i=t(6540);const s={},r=i.createContext(s);function a(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);