"use strict";(self.webpackChunkneuraltrust_docs=self.webpackChunkneuraltrust_docs||[]).push([[449],{5074:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>c,default:()=>h,frontMatter:()=>l,metadata:()=>r,toc:()=>o});const r=JSON.parse('{"id":"trustgate/monitoring","title":"Monitoring","description":"TrustGate provides comprehensive monitoring capabilities through a Prometheus metrics endpoint. This guide explains how to access and interpret these metrics to monitor your gateway\'s performance and health.","source":"@site/docs/trustgate/monitoring.md","sourceDirName":"trustgate","slug":"/trustgate/monitoring","permalink":"/trustgate/monitoring","draft":false,"unlisted":false,"editUrl":"https://github.com/NeuralTrust/neuraltrust/blob/main/docs/trustgate/monitoring.md","tags":[],"version":"current","sidebarPosition":5,"frontMatter":{"sidebar_position":5,"title":"Monitoring"},"sidebar":"tutorialSidebar","previous":{"title":"Benchmark","permalink":"/trustgate/benchmark"},"next":{"title":"Overview","permalink":"/trusttest/getting-started/overview"}}');var i=t(4848),s=t(8453);const l={sidebar_position:5,title:"Monitoring"},c="Monitoring TrustGate",a={},o=[{value:"Configuration",id:"configuration",level:2},{value:"Metrics Endpoint",id:"metrics-endpoint",level:2},{value:"Available Metrics",id:"available-metrics",level:2},{value:"Connection Metrics",id:"connection-metrics",level:3},{value:"Request Metrics",id:"request-metrics",level:3},{value:"Latency Metrics",id:"latency-metrics",level:3},{value:"Prometheus Handler Metrics",id:"prometheus-handler-metrics",level:3},{value:"Monitoring Setup",id:"monitoring-setup",level:2},{value:"Prometheus Configuration",id:"prometheus-configuration",level:3},{value:"Grafana Dashboard",id:"grafana-dashboard",level:3},{value:"Example PromQL Queries",id:"example-promql-queries",level:2},{value:"Request Rate",id:"request-rate",level:3},{value:"95th Percentile Latency",id:"95th-percentile-latency",level:3},{value:"Error Rate",id:"error-rate",level:3},{value:"Active Connections",id:"active-connections",level:3},{value:"Best Practices",id:"best-practices",level:2},{value:"Troubleshooting",id:"troubleshooting",level:2},{value:"Next Steps",id:"next-steps",level:2}];function d(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"monitoring-trustgate",children:"Monitoring TrustGate"})}),"\n",(0,i.jsx)(n.p,{children:"TrustGate provides comprehensive monitoring capabilities through a Prometheus metrics endpoint. This guide explains how to access and interpret these metrics to monitor your gateway's performance and health."}),"\n",(0,i.jsx)(n.h2,{id:"configuration",children:"Configuration"}),"\n",(0,i.jsx)(n.p,{children:"Metrics collection can be configured in your TrustGate configuration file:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"server:\n  admin_port: 8080\n  metrics_port: 9090  # Port where metrics are exposed\n  proxy_port: 8081\n  base_domain: example.com\n\nmetrics:\n  enabled: true               # Enable/disable all metrics\n  enable_latency: true       # Basic latency metrics\n  enable_upstream: true      # Upstream latency (high cardinality)\n  enable_connections: true   # Connection tracking\n  enable_per_route: true    # Per-route metrics (high cardinality)\n  enable_detailed_status: true # Detailed status codes\n"})}),"\n",(0,i.jsx)(n.p,{children:"Each metric type can be individually enabled or disabled to control cardinality and resource usage. High-cardinality metrics like per-route and upstream latency should be enabled with caution in large deployments."}),"\n",(0,i.jsx)(n.h2,{id:"metrics-endpoint",children:"Metrics Endpoint"}),"\n",(0,i.jsxs)(n.p,{children:["TrustGate exposes metrics at the ",(0,i.jsx)(n.code,{children:"/metrics"})," endpoint in Prometheus format. These metrics provide insights into request processing, latency, connections, and overall system health."]}),"\n",(0,i.jsx)(n.h2,{id:"available-metrics",children:"Available Metrics"}),"\n",(0,i.jsx)(n.h3,{id:"connection-metrics",children:"Connection Metrics"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"# HELP trustgate_connections Number of active connections\n# TYPE trustgate_connections gauge\n"})}),"\n",(0,i.jsx)(n.p,{children:"This gauge metric tracks the number of active connections to your gateway. It includes the following labels:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"gateway_id"}),": Unique identifier for the gateway instance"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"state"}),': Connection state (e.g., "active")']}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"request-metrics",children:"Request Metrics"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"# HELP trustgate_requests_total Total number of requests processed\n# TYPE trustgate_requests_total counter\n"})}),"\n",(0,i.jsx)(n.p,{children:"This counter tracks the total number of requests processed by the gateway with labels for:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"gateway_id"}),": Gateway instance identifier"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"method"}),": HTTP method (GET, POST, etc.)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"status"}),": HTTP status code category (2xx, 4xx, 5xx)"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"latency-metrics",children:"Latency Metrics"}),"\n",(0,i.jsx)(n.p,{children:"TrustGate provides three types of latency histograms:"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:"Overall Request Latency"})}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"# HELP trustgate_latency_ms Request latency in milliseconds\n# TYPE trustgate_latency_ms histogram\n"})}),"\n",(0,i.jsxs)(n.ol,{start:"2",children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:"Detailed Route/Service Latency"})}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"# HELP trustgate_detailed_latency_ms Detailed request latency by service and route\n# TYPE trustgate_detailed_latency_ms histogram\n"})}),"\n",(0,i.jsxs)(n.ol,{start:"3",children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:"Upstream Service Latency"})}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"# HELP trustgate_upstream_latency_ms Upstream service latency in milliseconds\n# TYPE trustgate_upstream_latency_ms histogram\n"})}),"\n",(0,i.jsx)(n.p,{children:"All latency metrics include bucket ranges from 5ms to 30s and provide:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"gateway_id"}),": Gateway instance identifier"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"route"}),": Route ID (for detailed and upstream metrics)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"service"}),": Service ID (for detailed and upstream metrics)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"type"}),": Request path (for overall latency)"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"prometheus-handler-metrics",children:"Prometheus Handler Metrics"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"# HELP promhttp_metric_handler_requests_in_flight Current number of scrapes being served\n# TYPE promhttp_metric_handler_requests_in_flight gauge\n\n# HELP promhttp_metric_handler_requests_total Total number of scrapes by HTTP status code\n# TYPE promhttp_metric_handler_requests_total counter\n"})}),"\n",(0,i.jsx)(n.p,{children:"These metrics provide information about the Prometheus metrics endpoint itself."}),"\n",(0,i.jsx)(n.h2,{id:"monitoring-setup",children:"Monitoring Setup"}),"\n",(0,i.jsx)(n.h3,{id:"prometheus-configuration",children:"Prometheus Configuration"}),"\n",(0,i.jsx)(n.p,{children:"Add TrustGate as a target in your Prometheus configuration:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"scrape_configs:\n  - job_name: 'trustgate'\n    static_configs:\n      - targets: ['localhost:8080']\n    metrics_path: '/metrics'\n"})}),"\n",(0,i.jsx)(n.h3,{id:"grafana-dashboard",children:"Grafana Dashboard"}),"\n",(0,i.jsx)(n.p,{children:"Create a Grafana dashboard to visualize key metrics:"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Request Overview"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Total requests by status code"}),"\n",(0,i.jsx)(n.li,{children:"Request rate over time"}),"\n",(0,i.jsx)(n.li,{children:"Active connections"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Latency Metrics"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Overall request latency (p50, p90, p99)"}),"\n",(0,i.jsx)(n.li,{children:"Service-specific latency"}),"\n",(0,i.jsx)(n.li,{children:"Upstream latency distribution"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Service Health"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Success rate by service"}),"\n",(0,i.jsx)(n.li,{children:"Error rate by route"}),"\n",(0,i.jsx)(n.li,{children:"Connection status"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"example-promql-queries",children:"Example PromQL Queries"}),"\n",(0,i.jsx)(n.h3,{id:"request-rate",children:"Request Rate"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-promql",children:'rate(trustgate_requests_total{status="2xx"}[5m])\n'})}),"\n",(0,i.jsx)(n.h3,{id:"95th-percentile-latency",children:"95th Percentile Latency"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-promql",children:"histogram_quantile(0.95, sum(rate(trustgate_detailed_latency_ms_bucket{}[5m])) by (le, service))\n"})}),"\n",(0,i.jsx)(n.h3,{id:"error-rate",children:"Error Rate"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-promql",children:'sum(rate(trustgate_requests_total{status=~"4xx|5xx"}[5m])) by (status)\n'})}),"\n",(0,i.jsx)(n.h3,{id:"active-connections",children:"Active Connections"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-promql",children:'trustgate_connections{state="active"}\n'})}),"\n",(0,i.jsx)(n.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Alert Configuration"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Set up alerts for high error rates"}),"\n",(0,i.jsx)(n.li,{children:"Monitor latency thresholds"}),"\n",(0,i.jsx)(n.li,{children:"Track connection limits"}),"\n",(0,i.jsx)(n.li,{children:"Watch for request spikes"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Dashboard Organization"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Group related metrics"}),"\n",(0,i.jsx)(n.li,{children:"Use appropriate time ranges"}),"\n",(0,i.jsx)(n.li,{children:"Include service-level views"}),"\n",(0,i.jsx)(n.li,{children:"Add error tracking panels"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Metric Collection"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Set appropriate scrape intervals"}),"\n",(0,i.jsx)(n.li,{children:"Configure retention periods"}),"\n",(0,i.jsx)(n.li,{children:"Monitor metric cardinality"}),"\n",(0,i.jsx)(n.li,{children:"Use label aggregation"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Performance Monitoring"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Track latency trends"}),"\n",(0,i.jsx)(n.li,{children:"Monitor resource usage"}),"\n",(0,i.jsx)(n.li,{children:"Watch for bottlenecks"}),"\n",(0,i.jsx)(n.li,{children:"Analyze traffic patterns"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"troubleshooting",children:"Troubleshooting"}),"\n",(0,i.jsx)(n.p,{children:"Common monitoring issues and solutions:"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"High Latency"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Check upstream service latency"}),"\n",(0,i.jsx)(n.li,{children:"Review connection pooling"}),"\n",(0,i.jsx)(n.li,{children:"Monitor resource usage"}),"\n",(0,i.jsx)(n.li,{children:"Analyze request patterns"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Error Spikes"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Check service health"}),"\n",(0,i.jsx)(n.li,{children:"Review error logs"}),"\n",(0,i.jsx)(n.li,{children:"Monitor rate limits"}),"\n",(0,i.jsx)(n.li,{children:"Verify configurations"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Connection Issues"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Check network connectivity"}),"\n",(0,i.jsx)(n.li,{children:"Review connection limits"}),"\n",(0,i.jsx)(n.li,{children:"Monitor timeout settings"}),"\n",(0,i.jsx)(n.li,{children:"Verify DNS resolution"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"next-steps",children:"Next Steps"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Set up Prometheus and Grafana"}),"\n",(0,i.jsx)(n.li,{children:"Configure alerting rules"}),"\n",(0,i.jsx)(n.li,{children:"Create custom dashboards"}),"\n",(0,i.jsx)(n.li,{children:"Implement logging integration"}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>l,x:()=>c});var r=t(6540);const i={},s=r.createContext(i);function l(e){const n=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:l(e.components),r.createElement(s.Provider,{value:n},e.children)}}}]);