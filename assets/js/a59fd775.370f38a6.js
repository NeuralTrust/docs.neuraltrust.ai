"use strict";(self.webpackChunkneuraltrust_docs=self.webpackChunkneuraltrust_docs||[]).push([[4111],{2075:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>o,contentTitle:()=>l,default:()=>u,frontMatter:()=>s,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"ai-gateway/quickstart","title":"Quickstart Guide","description":"Overview","source":"@site/docs/ai-gateway/quickstart.md","sourceDirName":"ai-gateway","slug":"/ai-gateway/quickstart","permalink":"/neuraltrust/ai-gateway/quickstart","draft":false,"unlisted":false,"editUrl":"https://github.com/NeuralTrust/neuraltrust/blob/main/docs/ai-gateway/quickstart.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"tutorialSidebar","previous":{"title":"Overview","permalink":"/neuraltrust/ai-gateway/introduction"},"next":{"title":"Architecture","permalink":"/neuraltrust/ai-gateway/architecture"}}');var a=i(4848),r=i(8453);const s={sidebar_position:1},l="Quickstart Guide",o={},c=[{value:"Overview",id:"overview",level:2},{value:"Installation &amp; Setup",id:"installation--setup",level:2},{value:"Basic Setup",id:"basic-setup",level:3},{value:"Configuration Structure",id:"configuration-structure",level:3},{value:"Gateway Configuration",id:"gateway-configuration",level:2},{value:"Creating a Gateway Instance",id:"creating-a-gateway-instance",level:3},{value:"API Key Management",id:"api-key-management",level:3},{value:"Load Balancing Configuration",id:"load-balancing-configuration",level:3},{value:"Testing the Setup",id:"testing-the-setup",level:2},{value:"Rate Limit Testing",id:"rate-limit-testing",level:3},{value:"Key Features",id:"key-features",level:2},{value:"Advanced Rate Limiting",id:"advanced-rate-limiting",level:3},{value:"Load Balancing",id:"load-balancing",level:3},{value:"Plugin System",id:"plugin-system",level:3},{value:"Next Steps",id:"next-steps",level:2}];function d(e){const n={blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"quickstart-guide",children:"Quickstart Guide"})}),"\n",(0,a.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,a.jsx)(n.p,{children:"The AI Gateway acts as an intelligent proxy server designed specifically for AI workloads. It provides advanced rate limiting, load balancing, and monitoring capabilities optimized for Large Language Models (LLMs) and other AI services."}),"\n",(0,a.jsx)(n.h2,{id:"installation--setup",children:"Installation & Setup"}),"\n",(0,a.jsx)(n.h3,{id:"basic-setup",children:"Basic Setup"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"git clone https://github.com/ai-gateway/ai-gateway.git\ncd ai-gateway\n"})}),"\n",(0,a.jsx)(n.p,{children:"The setup process is straightforward and focuses on AI-specific configurations out of the box."}),"\n",(0,a.jsx)(n.h3,{id:"configuration-structure",children:"Configuration Structure"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'server:\n    admin_port: 8080    # Port for administrative API\n    proxy_port: 8081    # Main proxy port for AI traffic\n    base_domain: example.com\n\nredis:\n    host: localhost     # Redis for high-performance rate limiting\n    port: 6379\n    password: ""\n    db: 0\n\ndatabase:\n    host: localhost     # PostgreSQL for configuration storage\n    port: 5432\n    user: postgres\n    password: postgres\n    dbname: ai_gateway\n    ssl_mode: disable \n'})}),"\n",(0,a.jsx)(n.p,{children:"This configuration is optimized for AI workloads, using Redis for real-time rate limiting and PostgreSQL for persistent configuration storage."}),"\n",(0,a.jsx)(n.h2,{id:"gateway-configuration",children:"Gateway Configuration"}),"\n",(0,a.jsx)(n.h3,{id:"creating-a-gateway-instance",children:"Creating a Gateway Instance"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:'curl -X POST http://localhost:8080/api/v1/gateways \\\n  -H "Content-Type: application/json" \\\n  -d \'{\n    "name": "Multi Rate Limited Gateway",\n    "subdomain": "multirate",\n    "tier": "basic",\n    "enabled_plugins": ["advanced_rate_limiter"],\n    "required_plugins": [\n        {\n            "name": "advanced_rate_limiter",\n            "enabled": true,\n            "stage": "pre_request",\n            "priority": 1,\n            "settings": {\n                "limits": {\n                    "global": {\n                        "limit": 15,\n                        "window": "1m"\n                    },\n                    "per_ip": {\n                        "limit": 5,\n                        "window": "1m"\n                    },\n                    "per_user": {\n                        "limit": 5,\n                        "window": "1m"\n                    }\n                },\n                "actions": {\n                    "type": "reject",\n                    "retry_after": "60"\n                }\n            }\n        }\n    ]\n}\'\n'})}),"\n",(0,a.jsx)(n.p,{children:"The rate limiter is specifically designed for AI workloads with:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Global limits for overall API capacity"}),"\n",(0,a.jsx)(n.li,{children:"Per-IP limits to prevent abuse"}),"\n",(0,a.jsx)(n.li,{children:"Per-user limits for fair resource allocation"}),"\n",(0,a.jsx)(n.li,{children:"Token-based quotas for LLM interactions"}),"\n"]}),"\n",(0,a.jsx)(n.h3,{id:"api-key-management",children:"API Key Management"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:'curl -X POST http://localhost:8080/api/v1/gateways/{gateway_id}/keys \\\n  -H "Content-Type: application/json" \\\n  -d \'{\n    "name": "Test Key"\n}\'\n'})}),"\n",(0,a.jsx)(n.p,{children:"API keys include metadata specific to AI usage tracking, including token consumption and model access patterns."}),"\n",(0,a.jsx)(n.h3,{id:"load-balancing-configuration",children:"Load Balancing Configuration"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:'curl -X POST http://localhost:8080/api/v1/gateways/{gateway_id}/rules \\\n  -H "Content-Type: application/json" \\\n  -d \'{\n    "path": "/api",\n    "targets": [\n      {\n        "url": "https://api1.example.com",\n        "weight": 70\n      },\n      {\n        "url": "https://api2.example.com",\n        "weight": 30\n      }\n    ],\n    "methods": ["GET", "POST"],\n    "strip_path": true\n}\'\n'})}),"\n",(0,a.jsx)(n.p,{children:"Our intelligent routing system considers:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Model performance requirements"}),"\n",(0,a.jsx)(n.li,{children:"Cost optimization across different AI providers"}),"\n",(0,a.jsx)(n.li,{children:"Response time requirements"}),"\n",(0,a.jsx)(n.li,{children:"Token quota management"}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"testing-the-setup",children:"Testing the Setup"}),"\n",(0,a.jsx)(n.h3,{id:"rate-limit-testing",children:"Rate Limit Testing"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:'# Test IP-based rate limit\ncurl -X GET "http://multirate.example.com:8081/api" \\\n  -H "Authorization: Bearer {api_key}" \\\n  -H "X-Real-IP: 192.168.1.1"\n\n# Test user-based rate limit\ncurl -X GET "http://multirate.example.com:8081/api" \\\n  -H "Authorization: Bearer {api_key}" \\\n  -H "X-User-ID: user123" \\\n  -H "X-Real-IP: 192.168.1.2"\n'})}),"\n",(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"Note"}),": You can find a complete test script for this example at ",(0,a.jsx)("a",{class:"link-blue",href:"https://github.com/NeuralTrust/ai-gateway-ce/blob/main/scripts/test_rate_limiter.sh",children:(0,a.jsx)(n.code,{children:"scripts/test_rate_limiter.sh"})}),". This script automates the testing of different rate limit types and provides colored output for better visibility."]}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"key-features",children:"Key Features"}),"\n",(0,a.jsx)(n.h3,{id:"advanced-rate-limiting",children:"Advanced Rate Limiting"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Global rate limits"}),"\n",(0,a.jsx)(n.li,{children:"Per-IP limits"}),"\n",(0,a.jsx)(n.li,{children:"Per-user limits"}),"\n",(0,a.jsx)(n.li,{children:"Configurable windows and actions"}),"\n"]}),"\n",(0,a.jsx)(n.h3,{id:"load-balancing",children:"Load Balancing"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Weighted distribution"}),"\n",(0,a.jsx)(n.li,{children:"Multiple target support"}),"\n",(0,a.jsx)(n.li,{children:"Automatic failover"}),"\n"]}),"\n",(0,a.jsx)(n.h3,{id:"plugin-system",children:"Plugin System"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Pre and post request processing"}),"\n",(0,a.jsx)(n.li,{children:"Sequential and parallel execution"}),"\n",(0,a.jsx)(n.li,{children:"Built-in plugins for common tasks"}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"next-steps",children:"Next Steps"}),"\n",(0,a.jsx)(n.p,{children:"After completing the basic setup, explore these advanced features:"}),"\n",(0,a.jsxs)("div",{style:{display:"grid",gridTemplateColumns:"1fr 1fr",gap:"20px",marginTop:"20px"},children:[(0,a.jsxs)("a",{href:"./concepts/forwarding-rules",style:{padding:"20px",border:"1px solid #eee",borderRadius:"8px",textDecoration:"none",color:"inherit",transition:"all 0.2s ease",boxShadow:"0 2px 4px rgba(0,0,0,0.1)"},children:[(0,a.jsx)("h3",{children:"\ud83d\udd04 Forwarding Rules"}),(0,a.jsx)("p",{children:"Learn about intelligent request routing and traffic management for AI workloads"})]}),(0,a.jsxs)("a",{href:"./concepts/plugin-system",style:{padding:"20px",border:"1px solid #eee",borderRadius:"8px",textDecoration:"none",color:"inherit",transition:"all 0.2s ease",boxShadow:"0 2px 4px rgba(0,0,0,0.1)"},children:[(0,a.jsx)("h3",{children:"\ud83d\udd0c Plugin System"}),(0,a.jsx)("p",{children:"Explore AI-specific security and monitoring capabilities through our plugin architecture"})]}),(0,a.jsxs)("a",{href:"./concepts/traffic-management",style:{padding:"20px",border:"1px solid #eee",borderRadius:"8px",textDecoration:"none",color:"inherit",transition:"all 0.2s ease",boxShadow:"0 2px 4px rgba(0,0,0,0.1)"},children:[(0,a.jsx)("h3",{children:"\ud83d\udea6 Traffic Management"}),(0,a.jsx)("p",{children:"Optimize your LLM workloads with advanced traffic management features"})]}),(0,a.jsxs)("a",{href:"./concepts/consumer-groups",style:{padding:"20px",border:"1px solid #eee",borderRadius:"8px",textDecoration:"none",color:"inherit",transition:"all 0.2s ease",boxShadow:"0 2px 4px rgba(0,0,0,0.1)"},children:[(0,a.jsx)("h3",{children:"\ud83d\udc65 Consumer Groups (Enterprise)"}),(0,a.jsx)("p",{children:"Manage access control and usage policies for different user groups"})]})]})]})}function u(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>s,x:()=>l});var t=i(6540);const a={},r=t.createContext(a);function s(e){const n=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:s(e.components),t.createElement(r.Provider,{value:n},e.children)}}}]);